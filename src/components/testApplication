import React, { useState} from "react";
import ReactDOM from "react-dom";

const Post = ({ post }) => {
    return (
        <div>
            {post.title,post.author}
            {post.url}
            {post.likes}
        </div>
    );
};

const Filter = ({ newFilter, filterChangeHandler }) => {
    return (
        <p>
            filter shown with
            <input value={newFilter} onChange={filterChangeHandler} />
        </p>
    );
};
const PostForm = ({
    addPost,
    newTitle,
    titleChangeHandler,
    newAuthor,
    authorChangeHandler,
    newURL,
    URLChangeHandler,
    likeChangeHandler,
    likes
}) => {
    return (
        <div>
            <form onSubmit={addPost}>
                <p>
                    {" "}
                    title:{" "}
                    <input value={newTitle} onChange={titleChangeHandler} />
                </p>
                <p>
                    {" "}
                    number:{" "}
                    <input value={newAuthor} onChange={authorChangeHandler} />
                </p>
                <p>
                    {" "}
                    url: <input value={newURL} onChange={URLChangeHandler} />
                </p>
                <div>
                    <button type="submit">Add</button>
                </div>
            </form>
            <button onClick={likeChangeHandler}>{likes}</button>
        </div>
    );
};
const Rows = ({ rows }) => {
    return <div>{rows}</div>;
};
const TestApp = () => {
    const [posts, setPosts] = useState([]);
    const [likes, setLikes] = useState(0);
    const [newTitle, setNewTitle] = useState("");
    const [newAuthor, setNewAuthor] = useState("");
    const [showAll, setShowAll] = useState(true);
    const [newFilter, setNewFilter] = useState("");
    const [newURL, setNewURL] = useState("");
    debugger;
    const addPost = event => {
        event.preventDefault();
        const postObject = {
            title: newTitle,
            author: newAuthor,
            url: newURL,
            likes: 0,
            id: posts.length + 1
        };
        if (posts.findIndex(post => post.title === newTitle) > -1) {
            console.log("post already exists");
            alert(`${newTitle} is already added to authorbook`);
        } else {
            setPosts(posts.concat(postObject));
        }
        setNewTitle("");
        setNewAuthor("");
        setNewURL("");
    };
    const filterChangeHandler = event => {
        console.log(event.target.value);
        setNewFilter(event.target.value);
    };
    const likeChangeHandler = event => {
        setLikes(likes + 1);
    };

    const rows = () =>
        posts
            .filter(post =>
                post.title.toLowerCase().includes(newFilter.toLowerCase())
            )
            .map(post => <Post key={post.id} post={post} />);

    const titleChangeHandler = event => {
        console.log(event.target.value);
        setNewTitle(event.target.value);
    };
    const authorChangeHandler = event => {
        console.log(event.target.value);
        setNewAuthor(event.target.value);
    };
    const URLChangeHandler = event => {
        console.log(event.target.value);
        setNewURL(event.target.value);
    };

    return (
        <div>
            <h1> authorbook </h1>
            <Filter
                newFilter={newFilter}
                filterChangeHandler={filterChangeHandler}
            />
            <h1> add a new </h1>
            <PostForm
                addPost={addPost}
                newTitle={newTitle}
                titleChangeHandler={titleChangeHandler}
                newAuthor={newAuthor}
                authorChangeHandler={authorChangeHandler}
                URLChangeHandler={URLChangeHandler}
                newURL={newURL}
                likeChangeHandler={likeChangeHandler}
                likes={likes}
            />
            <h1>Numbers </h1>
            <Rows rows={rows()} />
        </div>
    );
};

export default TestApp;